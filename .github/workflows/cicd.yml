# This workflow will build a .NET project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-net

name: Build and Test Pipeline

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    
    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: 7.0.x
        
    - name: Restore dependencies
      run: dotnet restore
      
    - name: Build
      run: dotnet build --no-restore
      
    - name: Run test
      run: dotnet test --no-build --verbosity normal
  sonarcloud:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Setup .NET Core
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '7.0.x'

      - name: Restore dependencies
        run: dotnet restore

      - name: Build project
        run: dotnet build --configuration Release

      - name: Run unit tests with Coverlet
        run: dotnet test /p:CollectCoverage=true /p:CoverletOutputFormat=opencover

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '16.x'

      - name: Install Vue3 dependencies
        run: |
          cd Client
          npm install

      - name: Build Vue3 project
        run: |
          cd ./PokemonApp/Client
          npm run build

      - name: Analyze with SonarCloud
        uses: sonarsource/sonarcloud-github-action@master
        with:
          organization: mr-duke
          project: sqs
          projectKey: mr-duke_sqs
          token: ${{ secrets.SONAR_TOKEN }}
          scannerArgs: >
            -Dsonar.sources=. 
            -Dsonar.tests=. 
            -Dsonar.exclusions=**/bin/**,**/obj/**,**/node_modules/** 
            -Dsonar.cs.opencover.reportsPaths=**/coverage.opencover.xml