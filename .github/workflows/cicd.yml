# This workflow will build a .NET project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-net

name: Build and Test Pipeline

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    
    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: 7.0.x
        
    - name: Restore dependencies
      run: dotnet restore
      
    - name: Build
      run: dotnet build --no-restore
      
    - name: Run test
      run: dotnet test --no-build --verbosity normal
  sonarcloud:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Setup .NET
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: 7.0.x
      - name: Use Node.js 14.x
        uses: actions/setup-node@v2
        with:
          node-version: '14.x'
      - name: Build
        run: dotnet build --configuration Release
      - name: Install Coverlet
        run: dotnet tool install --global coverlet.console
      - name: Test with Coverlet
        run: dotnet test /p:CollectCoverage=true /p:CoverletOutputFormat=opencover
        env:
          COVERLET_OUTPUT: ./testresults/coverage/
      - name: SonarScanner for .NET
        uses: SonarSource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        with:
          args: >
            -Dsonar.login=${{ secrets.SONAR_TOKEN }}
            -Dsonar.host.url=https://sonarcloud.io
            -Dsonar.projectKey=mr-duke_sqs
            -Dsonar.organization=mr-duke
            -Dsonar.coverageReportPaths=$(COVERLET_OUTPUT)*.xml
            -Dsonar.cs.opencover.reportsPaths=$(COVERLET_OUTPUT)*.xml
            -Dsonar.projectName=sqs
